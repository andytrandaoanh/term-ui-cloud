[{"D:\\NodeJS\\term-ui-cloud\\src\\index.js":"1","D:\\NodeJS\\term-ui-cloud\\src\\App.js":"2","D:\\NodeJS\\term-ui-cloud\\src\\reportWebVitals.js":"3","D:\\NodeJS\\term-ui-cloud\\src\\components\\routing-component.js":"4","D:\\NodeJS\\term-ui-cloud\\src\\components\\app-bar-component.js":"5","D:\\NodeJS\\term-ui-cloud\\src\\pages\\home-page.js":"6","D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-list-page.js":"7","D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-display-page.js":"8","D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-add-page.js":"9","D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-edit-page.js":"10","D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-delete-page.js":"11","D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-combined-page.js":"12","D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-search-page.js":"13","D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-orderlist-page.js":"14","D:\\NodeJS\\term-ui-cloud\\src\\pages\\example-add-page.js":"15","D:\\NodeJS\\term-ui-cloud\\src\\pages\\example-edit-page.js":"16","D:\\NodeJS\\term-ui-cloud\\src\\pages\\example-delete-page.js":"17","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-card-component.js":"18","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-display-component.js":"19","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-list-component.js":"20","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-add-component.js":"21","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-edit-component.js":"22","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-delete-component.js":"23","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-combined-component.js":"24","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-search-component.js":"25","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-orderlist-component.js":"26","D:\\NodeJS\\term-ui-cloud\\src\\components\\example-add-component.js":"27","D:\\NodeJS\\term-ui-cloud\\src\\components\\example-edit-component.js":"28","D:\\NodeJS\\term-ui-cloud\\src\\components\\example-delete-component.js":"29","D:\\NodeJS\\term-ui-cloud\\src\\components\\api-config.js":"30"},{"size":500,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":352,"mtime":1608145985720,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":1715,"mtime":1608145792208,"results":"35","hashOfConfig":"32"},{"size":6244,"mtime":1608146141908,"results":"36","hashOfConfig":"32"},{"size":129,"mtime":1608145792353,"results":"37","hashOfConfig":"32"},{"size":151,"mtime":1608145792387,"results":"38","hashOfConfig":"32"},{"size":306,"mtime":1608145792377,"results":"39","hashOfConfig":"32"},{"size":147,"mtime":1608145792362,"results":"40","hashOfConfig":"32"},{"size":295,"mtime":1608145792382,"results":"41","hashOfConfig":"32"},{"size":302,"mtime":1608145792372,"results":"42","hashOfConfig":"32"},{"size":310,"mtime":1608145792367,"results":"43","hashOfConfig":"32"},{"size":337,"mtime":1608145792405,"results":"44","hashOfConfig":"32"},{"size":346,"mtime":1608145792401,"results":"45","hashOfConfig":"32"},{"size":302,"mtime":1608145792323,"results":"46","hashOfConfig":"32"},{"size":304,"mtime":1608145792339,"results":"47","hashOfConfig":"32"},{"size":312,"mtime":1608145792334,"results":"48","hashOfConfig":"32"},{"size":2258,"mtime":1608145792220,"results":"49","hashOfConfig":"32"},{"size":5421,"mtime":1608145792249,"results":"50","hashOfConfig":"32"},{"size":3330,"mtime":1608146162031,"results":"51","hashOfConfig":"32"},{"size":5655,"mtime":1608145792214,"results":"52","hashOfConfig":"32"},{"size":6878,"mtime":1608145792268,"results":"53","hashOfConfig":"32"},{"size":6246,"mtime":1608145792243,"results":"54","hashOfConfig":"32"},{"size":2497,"mtime":1608146766444,"results":"55","hashOfConfig":"32"},{"size":2777,"mtime":1608146725174,"results":"56","hashOfConfig":"32"},{"size":2154,"mtime":1608146746268,"results":"57","hashOfConfig":"32"},{"size":5760,"mtime":1608146670453,"results":"58","hashOfConfig":"32"},{"size":5106,"mtime":1608146799390,"results":"59","hashOfConfig":"32"},{"size":5011,"mtime":1608146705861,"results":"60","hashOfConfig":"32"},{"size":239,"mtime":1608146562713,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1nnomos",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"D:\\NodeJS\\term-ui-cloud\\src\\index.js",[],["129","130"],"D:\\NodeJS\\term-ui-cloud\\src\\App.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\reportWebVitals.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\components\\routing-component.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\components\\app-bar-component.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\pages\\home-page.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-list-page.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-display-page.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-add-page.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-edit-page.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-delete-page.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-combined-page.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-search-page.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\pages\\term-orderlist-page.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\pages\\example-add-page.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\pages\\example-edit-page.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\pages\\example-delete-page.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\components\\term-card-component.js",["131","132","133","134"],"import React, { Fragment,  useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { TERM_API_URL } from './api-config.js';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  termcard: {\r\n    margin: 5,\r\n  },\r\n\r\n});\r\n\r\nexport default function TermCards() {\r\n  const classes = useStyles();\r\n  \r\n  const [termData, setTermData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n\r\n        try {\r\n        const result = await axios(TERM_API_URL);        \r\n        setTermData(result.data);\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n\r\n      setIsLoading(false);\r\n      //console.log(termData);\r\n \r\n    };\r\n \r\n    fetchData();\r\n  }, []);  \r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n        {termData.map(term => (\r\n            <Grid key={term.term_id} xs={3}>\r\n            <Card className={classes.termcard}>\r\n            <CardContent>\r\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                recently added term\r\n              </Typography>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                {term.main_term}\r\n              </Typography>\r\n              <Typography className={classes.pos} color=\"textSecondary\">\r\n                {term.co_term}\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button size=\"small\" component={RouterLink} to={`/terms/display/${term.term_id}`}>Learn More</Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n        ))}\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-display-component.js",["135","136","137"],"import React, {Fragment, useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport { TERM_API_URL, EXAMPLE_API_URL } from './api-config';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Box from '@material-ui/core/Box';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  containerBox:{\r\n    margin: theme.spacing(2),\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  paper: {\r\n    padding: 12,\r\n  },\r\n  buttonWrap:{\r\n    textAlign: 'right',\r\n    marginTop: -30,\r\n  },\r\n\r\n  exampleWrap:{\r\n    marginLeft: 10,\r\n  }\r\n\r\n}));\r\n\r\n\r\n\r\nexport default function TermDisplayComponent(props) {\r\n  const classes = useStyles();\r\n  const [termData, setTermData] = useState([]);\r\n  const [examples, setExamples] = useState([]);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isExampleLoading, setIsExampleLoading] = useState(false);\r\n  const [isTermLoading, setIsTermLoading] = useState(false);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchTermData = async () => {\r\n     \r\n      setIsTermLoading(true);\r\n\r\n        try {\r\n        const result = await axios.get(`${TERM_API_URL}/${props.termId}`);\r\n        //setTermData(result.data);\r\n        console.log(result.data);\r\n        setTermData(result.data);\r\n\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n\r\n      setIsTermLoading(false);\r\n      //console.log({'photo data': photoData});\r\n \r\n    };\r\n\r\n    const fetchExamples = async () => {\r\n     \r\n      setIsExampleLoading(true);\r\n\r\n        try {\r\n        const result = await axios.get(`${EXAMPLE_API_URL}/term/${props.termId}`);\r\n        //setTermData(result.data);\r\n        console.log(result.data);\r\n        setExamples(result.data);\r\n\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n\r\n      setIsExampleLoading(false);\r\n      //console.log({'photo data': photoData});\r\n \r\n    };\r\n\r\n    \r\n    fetchTermData();\r\n    fetchExamples();\r\n  },[]);\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n    {isExampleLoading || isTermLoading ? ( <div>Loading examples ...</div>) : (\r\n      <Container maxWidth=\"md\">\r\n      <Grid container className={classes.root} spacing={2}>\r\n        <Grid item xs={12} >\r\n\r\n          <Button  \r\n            size=\"medium\" color=\"primary\" \r\n            startIcon={<HomeIcon />}\r\n            component={RouterLink} to={`/home`}>Go Home\r\n          </Button>\r\n\r\n          <Button  \r\n            size=\"medium\" color=\"primary\"           \r\n            startIcon={<AddBoxIcon />}\r\n            component={RouterLink} to={`/examples/add/${termData.term_id}`}>Add Example\r\n          </Button>\r\n\r\n          <Button  size=\"medium\" color=\"primary\" \r\n            startIcon={<EditIcon />}\r\n            component={RouterLink} to={`/terms/edit/${props.termId}`}>\r\n            Edit Term\r\n          </Button>\r\n\r\n\r\n        </Grid>        \r\n        <Grid item xs={6}>\r\n       <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n        Main Term ({termData.main_lang})\r\n      </Typography>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n      {termData.main_term}\r\n      </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n      <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n      Corrensponding Term  ({termData.co_lang})\r\n      </Typography>    \r\n      <Typography variant=\"h4\" gutterBottom>\r\n      {termData.co_term}\r\n      </Typography>       \r\n      </Grid> \r\n      <Grid item xs={12}>\r\n        TAGS: {termData.tags}\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n              <Divider />\r\n      </Grid>\r\n\r\n\r\n        {examples.map(item => (\r\n          \r\n          <div className={classes.exampleWrap}>\r\n\r\n          <Grid item xs={12} key={`container${item.eg_id}`} >\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              {item.eg_body}\r\n            </Typography>\r\n\r\n          </Grid>\r\n          <Grid item xs={12} key={`source${item.eg_id}`} >\r\n          <Typography component=\"div\">\r\n\r\n            <Box fontStyle=\"italic\" m={1}>\r\n            {item.eg_source}\r\n            </Box>\r\n\r\n            </Typography>\r\n            <div className={classes.buttonWrap}>\r\n            <IconButton aria-label=\"delete\" \r\n            className={classes.margin}\r\n            component={RouterLink} to={`/examples/edit/${item.eg_id}`}\r\n            >\r\n              <EditIcon fontSize=\"small\" />\r\n            </IconButton> \r\n            <IconButton aria-label=\"delete\" \r\n            className={classes.margin}\r\n            component={RouterLink} to={`/examples/delete/${item.eg_id}`}\r\n            >\r\n              <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>           \r\n            </div>\r\n          </Grid>\r\n\r\n\r\n        </div>\r\n          \r\n        ))}\r\n      </Grid>\r\n      </Container>\r\n    )}  \r\n\r\n    </Fragment>\r\n  );\r\n  \r\n}\r\n\r\n","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-list-component.js",["138"],"import React, { Fragment,  useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport axios from 'axios';\r\nimport { TERM_API_URL } from './api-config.js';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\nexport default function DenseTable() {\r\n  const classes = useStyles();\r\n  const [termData, setTermData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  \r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n\r\n        try {\r\n        const result = await axios.get(TERM_API_URL);\r\n        setTermData(result.data);\r\n      } catch (error) {\r\n        setIsError(true);\r\n        console.log('error:', error);\r\n      }\r\n\r\n      setIsLoading(false);\r\n      console.log(termData);\r\n \r\n    };\r\n \r\n    fetchData();\r\n  }, []);  \r\n\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n    {isError && <div>Something went wrong when loading API data ...</div>}\r\n    {isLoading ? ( <div>Loading ...</div>) : (\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Action</TableCell>\r\n              <TableCell>Main Term</TableCell>\r\n              <TableCell>Lang</TableCell>\r\n              <TableCell >Co-Term</TableCell>\r\n              <TableCell>Lang</TableCell>\r\n              <TableCell>Tags</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell>Created</TableCell>\r\n              <TableCell>Updated</TableCell>\r\n              \r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {termData.map((row) => (\r\n              <TableRow key={row.term_id}>\r\n                <TableCell>\r\n                <IconButton  component={RouterLink} to={`/terms/display/${row.term_id}`}>\r\n                  <VisibilityIcon fontSize=\"small\"  color=\"primary\" /></IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">{row.main_term}</TableCell>\r\n                <TableCell>{row.main_lang}</TableCell>\r\n                <TableCell>{row.co_term}</TableCell>\r\n                <TableCell>{row.co_lang}</TableCell>\r\n                <TableCell>{row.tags}</TableCell>\r\n                <TableCell>{row.status}</TableCell>\r\n                <TableCell>{moment(row.created_at).format('DD/MM/YYYY')}</TableCell>\r\n                <TableCell>{moment(row.updated_at).format('DD/MM/YYYY')}</TableCell>\r\n    \r\n\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\n","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-add-component.js",["139"],"import React, { useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport { TERM_API_URL } from './api-config';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n \r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n  },\r\n\r\n  selectControl:{\r\n    width: '10ch',\r\n    marginLeft: 5,\r\n  },\r\n\r\n  checkControl: {\r\n    marginTop: 25,\r\n  },\r\n  textControl: {\r\n    width: '50ch',\r\n  },\r\n  formWrap: {\r\n    padding: 10,\r\n    textAlign: 'left',\r\n  },\r\n\r\n  formContainer: {\r\n    margin: 'auto',\r\n    width: '70%',\r\n    height: 400,\r\n    textAlign: 'center',\r\n  },\r\n  \r\n  submitWrap: {\r\n    width: '80%',\r\n    textAlign: 'center',\r\n  }\r\n\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nexport default function AddTermForm() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [mainLang, setMainLang] = useState(1);\r\n  const [coLang, setCoLang] = useState(3);\r\n  const [checked, setChecked] = useState(false);\r\n  const [mainTerm, setMainTerm] = useState('');\r\n  const [coTerm, setCoTerm] = useState('');\r\n  const [tags, setTags] = useState(''); \r\n  const [updateMessage, setUpdateMessage] = useState('');\r\n\r\n  const languages = [\r\n    {langID: 1, shortName: 'EN'},\r\n    {langID: 2, shortName: 'FR'},\r\n    {langID: 3, shortName: 'VI'},\r\n  ];\r\n\r\n  const handleSubmit = (event) =>{\r\n    \r\n    sendPostRequest();\r\n    event.preventDefault();\r\n  }\r\n\r\n  \r\n  const sendPostRequest = async () => {\r\n    const status  = checked ? 1 : 0;\r\n    const newTerm = {\r\n      mainTerm: mainTerm,\r\n      mainLangId: mainLang,\r\n      coTerm: coTerm,\r\n      coLangId: coLang,\r\n      tags: tags,\r\n      status: status,\r\n    };\r\n\r\n    //ready to send to API using Axios\r\n    //console.log(newTerm);\r\n    try {\r\n      const resp = await axios.post(TERM_API_URL, newTerm);\r\n      console.log(resp.data);\r\n      setUpdateMessage('Data sucessfully written to the database!');\r\n      //history.push(`/home`);\r\n\r\n    } catch (err) {\r\n      // Handle Error Here\r\n      console.error(err);\r\n      setUpdateMessage('Error encountered while writing to the database!');\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.formContainer}>\r\n    <div className={classes.formWrap}>\r\n\r\n        <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n\r\n        <FormControl  className={classes.formControl}>\r\n          <TextField \r\n            className={classes.textControl} \r\n            id= \"main-term\" \r\n            label=\"Main Term\" \r\n            onChange={(event)=>setMainTerm(event.target.value)}\r\n          />\r\n        </FormControl>  \r\n\r\n        <FormControl className={classes.formControl}>\r\n          <TextField \r\n            id=\"main-lang-select\"\r\n            select\r\n            label=\"Select\"\r\n            value={mainLang}\r\n            onChange={(event)=>setMainLang(event.target.value)}\r\n            helperText=\"Language\"\r\n            SelectProps={{className: classes.selectControl}}\r\n          >\r\n            \r\n            {languages.map(language =>(\r\n              <MenuItem key={`main-lang-${language.langID}`} value={language.langID}>\r\n                  {language.shortName}\r\n              </MenuItem>   \r\n            ))}  \r\n            \r\n          </TextField>\r\n        </FormControl>\r\n\r\n        <FormControl  className={classes.formControl}>\r\n          <TextField  \r\n          className={classes.textControl} \r\n          id= \"co-term\" label=\"Corresponding Term\"\r\n          onChange={(event)=>setCoTerm(event.target.value)}\r\n        />\r\n        </FormControl>  \r\n\r\n        <FormControl>\r\n          <TextField \r\n            id=\"co-lang-select\"\r\n            select\r\n            label=\"Select\"\r\n            value={coLang}\r\n            onChange={(event)=>setCoLang(event.target.value)}\r\n            helperText=\"Language\"\r\n            SelectProps={{className: classes.selectControl}}\r\n          >\r\n            \r\n            {languages.map(language =>(\r\n              <MenuItem key={`co-lang-${language.langID}`} value={language.langID}>\r\n                  {language.shortName}\r\n              </MenuItem>   \r\n            ))}  \r\n            \r\n          </TextField>\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <TextField  \r\n          className={classes.textControl} \r\n          id= \"tags\" label=\"Tags\"\r\n          onChange={(event)=>setTags(event.target.value)}\r\n           />\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.checkControl}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={checked}\r\n                onChange={(event)=>setChecked(event.target.checked)}\r\n                name=\"status\"\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Disabled\"\r\n          />\r\n        </FormControl>\r\n        <div className={classes.submitWrap}>\r\n        <div><Typography variant=\"caption\" display=\"block\" gutterBottom>{updateMessage}</Typography></div>\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n        \r\n        </div>\r\n        </form>\r\n        \r\n\r\n    </div>\r\n    \r\n    </div>\r\n  );\r\n}\r\n","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-edit-component.js",["140"],"import React, {Fragment, useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport { TERM_API_URL, LANGUAGE_API_URL } from './api-config';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },  \r\n    checkControl: {\r\n      marginTop: 25,            \r\n    },        \r\n  }\r\n}));\r\n\r\n\r\n\r\nexport default function EditTermForm(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [mainLang, setMainLang] = useState('');\r\n  const [coLang, setCoLang] = useState('');\r\n  const [checked, setChecked] = useState(false);\r\n  const [mainTerm, setMainTerm] = useState('');\r\n  const [coTerm, setCoTerm] = useState('');\r\n  const [tags, setTags] = useState(''); \r\n  const [isError, setIsError] = useState(false);\r\n  const [listLoading, setListLoading] = useState(false);\r\n  const [dataLoading, setDataLoading] = useState(false);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [updateMessage, setUpdateMessage] = useState('');\r\n\r\n\r\n  \r\n\r\n  const sendPutRequest = async () => {\r\n\r\n    const status  = checked ? 1 : 0;\r\n    const newTerm = {\r\n      mainTerm: mainTerm,\r\n      mainLangId: mainLang,\r\n      coTerm: coTerm,\r\n      coLangId: coLang,\r\n      tags: tags,\r\n      status: status,\r\n    };\r\n\r\n\r\n    try {\r\n        const resp = await axios.put(`${TERM_API_URL}/${props.termId}`, newTerm);\r\n        console.log(resp.data);\r\n        history.push(`/terms/display/${props.termId}`);\r\n    } catch (err) {\r\n        // Handle Error Here\r\n        console.error(err);\r\n        setUpdateMessage('Error encountered while writing to the database!');\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleSubmit = (event) =>{    \r\n    sendPutRequest();\r\n    \r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchTermData = async () => {\r\n     \r\n      setDataLoading(true);\r\n\r\n        try {\r\n        const result = await axios.get(`${TERM_API_URL}/${props.termId}`);\r\n        //setTermData(result.data);\r\n        //console.log(result.data);\r\n        setMainTerm(result.data.main_term);\r\n        setMainLang(result.data.main_lang_id);\r\n        setCoTerm(result.data.co_term);\r\n        setCoLang(result.data.co_lang_id);\r\n        setTags(result.data.tags);\r\n        result.data.status ? setChecked(true) : setChecked(false);\r\n\r\n      } catch (error) {\r\n        setIsError(true);\r\n        console.log('error loading term data', error);\r\n      }\r\n\r\n      setDataLoading(false);\r\n      //console.log({'photo data': photoData});\r\n \r\n    };\r\n\r\n    \r\n\r\n    const fetchLangData = async () => {\r\n     \r\n      setListLoading(true);\r\n\r\n        try {\r\n        const result = await axios.get(`${LANGUAGE_API_URL}`);\r\n        const langArray = [];\r\n        result.data.forEach((lang)=>langArray.push({langID: lang.lang_id, shortName: lang.short_name}));\r\n        //console.log(langArray);\r\n        setLanguages(langArray);\r\n\r\n\r\n      } catch (error) {\r\n        setIsError(true);\r\n        console.log('error loading languages', error);\r\n      }\r\n\r\n      setListLoading(false);\r\n      //console.log({'photo data': photoData});\r\n \r\n    };\r\n\r\n    fetchLangData();\r\n    fetchTermData();\r\n  },[]);\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n    {isError && <div>Something went wrong when loading API data ...</div>}\r\n    {listLoading || dataLoading ? ( <div>Loading ...</div>) : (\r\n\r\n    <div className='form-container-center'>\r\n\r\n        <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n\r\n        <FormControl  className={classes.formControlText}>\r\n          <TextField  id= \"main-term\" label=\"Main Term\" \r\n            defaultValue={mainTerm}  \r\n            onChange={(event)=>setMainTerm(event.target.value)}\r\n          />\r\n        </FormControl>  \r\n\r\n        <FormControl className={classes.formControlSelect}>\r\n          <TextField \r\n            id=\"main-lang-select\"\r\n            select\r\n            label=\"Select\"\r\n            value={mainLang}\r\n            onChange={(event)=>setMainLang(event.target.value)}\r\n            helperText=\"Language\"\r\n            SelectProps={{className: classes.selectControl}}\r\n          >\r\n            \r\n            {languages.map(language =>(\r\n              <MenuItem key={`main-lang-${language.langID}`} value={language.langID}>\r\n                  {language.shortName}\r\n              </MenuItem>   \r\n            ))}  \r\n            \r\n          </TextField>\r\n        </FormControl>\r\n\r\n        <FormControl  className={classes.formControlText}>\r\n          <TextField  id= \"co-term\" label=\"Corresponding Term\"\r\n           defaultValue={coTerm} \r\n          onChange={(event)=>setCoTerm(event.target.value)}\r\n        />\r\n        </FormControl>  \r\n\r\n        <FormControl className={classes.formControlSelect}>\r\n          <TextField \r\n            id=\"co-lang-select\"\r\n            select\r\n            label=\"Select\"\r\n            value={coLang}\r\n            onChange={(event)=>setCoLang(event.target.value)}\r\n            helperText=\"Language\"\r\n            SelectProps={{className: classes.selectControl}}\r\n          >\r\n            \r\n            {languages.map(language =>(\r\n              <MenuItem key={`co-lang-${language.langID}`} value={language.langID}>\r\n                  {language.shortName}\r\n              </MenuItem>   \r\n            ))}  \r\n            \r\n          </TextField>\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControlText}>\r\n          <TextField  id= \"tags\" label=\"Tags\"\r\n          defaultValue={tags}  \r\n          onChange={(event)=>setTags(event.target.value)}\r\n           />\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.checkControl}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={checked}\r\n                onChange={(event)=>setChecked(event.target.checked)}\r\n                name=\"status\"\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Disabled\"\r\n          />\r\n        </FormControl>\r\n    \r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n        </form>\r\n        <div><Typography variant=\"caption\" display=\"block\" gutterBottom>{updateMessage}</Typography></div>\r\n\r\n    </div>\r\n    )}\r\n    </Fragment>\r\n  );\r\n}\r\n","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-delete-component.js",["141"],"import React, {Fragment, useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport { TERM_API_URL, LANGUAGE_API_URL } from './api-config';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },  \r\n    checkControl: {\r\n      marginTop: 25,            \r\n    },        \r\n  }\r\n}));\r\n\r\n\r\n\r\nexport default function TermDeleteComponent(props) {\r\n  const classes = useStyles();\r\n  const [mainLang, setMainLang] = useState('');\r\n  const [coLang, setCoLang] = useState('');\r\n  const [checked, setChecked] = useState(false);\r\n  const [mainTerm, setMainTerm] = useState('');\r\n  const [coTerm, setCoTerm] = useState('');\r\n  const [tags, setTags] = useState(''); \r\n  const [isError, setIsError] = useState(false);\r\n  const [listLoading, setListLoading] = useState(false);\r\n  const [dataLoading, setDataLoading] = useState(false);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [updateMessage, setUpdateMessage] = useState('');\r\n\r\n\r\n  \r\n\r\n  const sendDeleteRequest = async () => {\r\n\r\n    try {\r\n        const resp = await axios.delete(`${TERM_API_URL}/${props.termId}`);\r\n        console.log(resp.data);\r\n    } catch (err) {\r\n        // Handle Error Here\r\n        console.error(err);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleSubmit = (event) =>{    \r\n    sendDeleteRequest();\r\n    setUpdateMessage('Data has successfully been removed from the database!');\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchTermData = async () => {\r\n     \r\n      setDataLoading(true);\r\n\r\n        try {\r\n        const result = await axios.get(`${TERM_API_URL}/${props.termId}`);\r\n        //setTermData(result.data);\r\n        //console.log(result.data);\r\n        setMainTerm(result.data.main_term);\r\n        setMainLang(result.data.main_lang_id);\r\n        setCoTerm(result.data.co_term);\r\n        setCoLang(result.data.co_lang_id);\r\n        setTags(result.data.tags);\r\n        result.data.status ? setChecked(true) : setChecked(false);\r\n\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n\r\n      setDataLoading(false);\r\n      //console.log({'photo data': photoData});\r\n \r\n    };\r\n\r\n    \r\n\r\n    const fetchLangData = async () => {\r\n     \r\n      setListLoading(true);\r\n\r\n        try {\r\n        const result = await axios.get(`${LANGUAGE_API_URL}`);\r\n        const langArray = [];\r\n        result.data.forEach((lang)=>langArray.push({langID: lang.lang_id, shortName: lang.short_name}));\r\n        //console.log(langArray);\r\n        setLanguages(langArray);\r\n\r\n\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n\r\n      setListLoading(false);\r\n      //console.log({'photo data': photoData});\r\n \r\n    };\r\n\r\n    fetchLangData();\r\n    fetchTermData();\r\n  },[]);\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n    {isError && <div>Something went wrong when loading API data ...</div>}\r\n    {listLoading || dataLoading ? ( <div>Loading ...</div>) : (\r\n\r\n    <div className='form-container-center'>\r\n\r\n        <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n\r\n        <FormControl  className={classes.formControlText}>\r\n          <TextField  id= \"main-term\" label=\"Main Term\" \r\n            disabled\r\n            defaultValue={mainTerm}              \r\n          />\r\n        </FormControl>  \r\n\r\n        <FormControl className={classes.formControlSelect}>\r\n          <TextField\r\n            disabled \r\n            id=\"main-lang-select\"\r\n            select\r\n            label=\"Select\"\r\n            value={mainLang}            \r\n            helperText=\"Language\"\r\n            SelectProps={{className: classes.selectControl}}\r\n          >\r\n            \r\n            {languages.map(language =>(\r\n              <MenuItem key={`main-lang-${language.langID}`} value={language.langID}>\r\n                  {language.shortName}\r\n              </MenuItem>   \r\n            ))}  \r\n            \r\n          </TextField>\r\n        </FormControl>\r\n\r\n        <FormControl  className={classes.formControlText}>\r\n          <TextField  id= \"co-term\" label=\"Corresponding Term\"\r\n           disabled\r\n           defaultValue={coTerm}           \r\n        />\r\n        </FormControl>  \r\n\r\n        <FormControl className={classes.formControlSelect}>\r\n          <TextField \r\n            disabled\r\n            id=\"co-lang-select\"\r\n            select\r\n            label=\"Select\"\r\n            value={coLang}            \r\n            helperText=\"Language\"\r\n            SelectProps={{className: classes.selectControl}}\r\n          >\r\n            \r\n            {languages.map(language =>(\r\n              <MenuItem key={`co-lang-${language.langID}`} value={language.langID}>\r\n                  {language.shortName}\r\n              </MenuItem>   \r\n            ))}  \r\n            \r\n          </TextField>\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControlText}>\r\n          <TextField  \r\n          disabled\r\n          id= \"tags\" label=\"Tags\"\r\n          defaultValue={tags}            \r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.checkControl}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                disabled\r\n                checked={checked}                \r\n                name=\"status\"\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n            label=\"Disabled\"\r\n          />\r\n        </FormControl>\r\n    \r\n        <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n          Delete\r\n        </Button>\r\n        </form>\r\n        <div><Typography variant=\"caption\" display=\"block\" gutterBottom>{updateMessage}</Typography></div>\r\n\r\n    </div>\r\n    )}\r\n    </Fragment>\r\n  );\r\n}\r\n","D:\\NodeJS\\term-ui-cloud\\src\\components\\term-combined-component.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\components\\term-search-component.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\components\\term-orderlist-component.js",[],"D:\\NodeJS\\term-ui-cloud\\src\\components\\example-add-component.js",["142"],"D:\\NodeJS\\term-ui-cloud\\src\\components\\example-edit-component.js",["143"],"D:\\NodeJS\\term-ui-cloud\\src\\components\\example-delete-component.js",["144"],"D:\\NodeJS\\term-ui-cloud\\src\\components\\api-config.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"153","line":11,"column":8,"nodeType":"151","messageId":"152","endLine":11,"endColumn":14},{"ruleId":"149","severity":1,"message":"154","line":33,"column":10,"nodeType":"151","messageId":"152","endLine":33,"endColumn":19},{"ruleId":"149","severity":1,"message":"155","line":34,"column":10,"nodeType":"151","messageId":"152","endLine":34,"endColumn":17},{"ruleId":"149","severity":1,"message":"156","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":13},{"ruleId":"149","severity":1,"message":"155","line":53,"column":10,"nodeType":"151","messageId":"152","endLine":53,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":101,"column":5,"nodeType":"159","endLine":101,"endColumn":7,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"161","line":50,"column":6,"nodeType":"159","endLine":50,"endColumn":8,"suggestions":"162"},{"ruleId":"149","severity":1,"message":"163","line":62,"column":9,"nodeType":"151","messageId":"152","endLine":62,"endColumn":16},{"ruleId":"157","severity":1,"message":"158","line":139,"column":5,"nodeType":"159","endLine":139,"endColumn":7,"suggestions":"164"},{"ruleId":"157","severity":1,"message":"158","line":122,"column":5,"nodeType":"159","endLine":122,"endColumn":7,"suggestions":"165"},{"ruleId":"157","severity":1,"message":"158","line":130,"column":5,"nodeType":"159","endLine":130,"endColumn":7,"suggestions":"166"},{"ruleId":"157","severity":1,"message":"167","line":125,"column":5,"nodeType":"159","endLine":125,"endColumn":7,"suggestions":"168"},{"ruleId":"157","severity":1,"message":"167","line":121,"column":5,"nodeType":"159","endLine":121,"endColumn":7,"suggestions":"169"},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'moment' is defined but never used.","'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.","'Paper' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.termId'. Either include it or remove the dependency array.","ArrayExpression",["172"],"React Hook useEffect has a missing dependency: 'termData'. Either include it or remove the dependency array.",["173"],"'history' is assigned a value but never used.",["174"],["175"],["176"],"React Hook useEffect has a missing dependency: 'props.egId'. Either include it or remove the dependency array.",["177"],["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"179","fix":"183"},{"desc":"179","fix":"184"},{"desc":"179","fix":"185"},{"desc":"186","fix":"187"},{"desc":"186","fix":"188"},"Update the dependencies array to be: [props.termId]",{"range":"189","text":"190"},"Update the dependencies array to be: [termData]",{"range":"191","text":"192"},{"range":"193","text":"190"},{"range":"194","text":"190"},{"range":"195","text":"190"},"Update the dependencies array to be: [props.egId]",{"range":"196","text":"197"},{"range":"198","text":"197"},[2590,2592],"[props.termId]",[1499,1501],"[termData]",[3773,3775],[3306,3308],[3333,3335],[3145,3147],"[props.egId]",[2984,2986]]